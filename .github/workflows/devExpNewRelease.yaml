name: Dev Experience with Microsoft DevBox New Release

permissions:
  id-token: write
  contents: write

# Trigger the workflow manually
on:
  workflow_dispatch:
    inputs:
      comments:
        description: 'Comments for the release'
        required: true
        default: 'No comments provided'
  push:
    branches:
      - main
    
jobs:

  Build:
    name: Build Workload resources
    runs-on: ubuntu-latest
    steps:
      # Update packages and upgrade Bicep
      - name: Update Packages and Upgrade Bicep
        run: |
          sudo apt-get update && \
          # sudo apt-get upgrade -y && \
          sudo az bicep upgrade
      
      # Checkout the repository to get the source code
      - name: Checkout repository
        uses: actions/checkout@v4
  
      # Build the Bicep files for Dev Box Resources
      - name: Build Dev Box Bicep files
        run: |
          az bicep build --file ./deploy/deploy.bicep --outfile ./bicepArtifacts/deploy.json
          az bicep build-params --file ./deploy/params.bicepparam --outfile ./bicepArtifacts/deploy-params.json

      # Compress the built Bicep artifacts into a zip file
      - name: Compress Bicep Artifacts
        run: |
          zip -r bicepArtifacts_v1.0.0-deploy-${{ github.run_number }}.zip ./bicepArtifacts

      # Upload the compressed Bicep artifacts
      - name: Upload Bicep Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bicepArtifacts_v1.0.0-deploy-${{ github.run_number }}.zip
          path: bicepArtifacts_v1.0.0-deploy-${{ github.run_number }}.zip

  publish-bicep-artifacts:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      # Download the previously uploaded Bicep artifacts
      - name: Download Bicep Artifacts
        uses: actions/download-artifact@v4
        with:
          name: bicepArtifacts_v1.0.0-deploy-${{ github.run_number }}.zip

      # Upload the Bicep artifacts to storage (add your upload logic here)
      - name: Upload Bicep Artifacts to Storage
        run: |
          # Add your upload logic here
          echo "Uploading Bicep artifacts"

  create-release:
    runs-on: ubuntu-latest
    needs: publish-bicep-artifacts
    steps:
      # Download the previously uploaded Bicep artifacts
      - name: Download Bicep Artifacts
        uses: actions/download-artifact@v4
        with:
          name: bicepArtifacts_v1.0.0-deploy-${{ github.run_number }}.zip

      # Create a new GitHub release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: Release v1.0.${{ github.run_number }}
          body: |
            Commits: ${{ toJson(github.event.Commits) }}
            Comments: ${{ toJson(github.event.Comments) }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the release asset to the GitHub release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bicepArtifacts_v1.0.0-deploy-${{ github.run_number }}.zip
          asset_name: bicepArtifacts_v1.0.0-deploy-${{ github.run_number }}.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}